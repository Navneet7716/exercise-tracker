{"version":3,"sources":["components/ExercisesList.js","components/EditExercise.js","components/CreateExercise.js","components/CreateUser.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ExercisesList","useState","exercises","setExercises","useEffect","a","axios","get","data","console","log","exercise","getData","deleteExercise","id","delete","filter","el","_id","className","map","currentExercise","key","Exercise","username","description","duration","date","substring","to","onClick","EditExercise","props","setUsername","setDescription","setDuration","Date","setDate","users","setUsers","onSubmit","e","preventDefault","patch","match","params","window","location","length","user","value","onChange","target","required","type","selected","CreateExercise","post","CreateUser","ButtonAppBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6acb49a5.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ExercisesList() {\r\n  const [exercises, setExercises] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        let data = await axios.get(\"/exercises/\");\r\n        console.log(data.data.exercise);\r\n        setExercises(data.data.exercise);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  const deleteExercise = async (id) => {\r\n    await axios.delete(`/exercises/${id}`);\r\n\r\n    setExercises(exercises.filter((el) => el._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center\">Logged Exercises</h1>\r\n      <table className=\"table-light\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Description</th>\r\n            <th>Duration</th>\r\n            <th>Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {exercises.map((currentExercise) => (\r\n            <Exercise\r\n              exercise={currentExercise}\r\n              deleteExercise={deleteExercise}\r\n              key={currentExercise._id}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Exercise = ({ exercise, deleteExercise, key }) => (\r\n  <tr>\r\n    <td>{exercise.username}</td>\r\n    <td>{exercise.description}</td>\r\n    <td>{exercise.duration}</td>\r\n    <td>{exercise.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + exercise._id}>\r\n        <a className=\"btn btn-primary\">Edit</a>\r\n      </Link>{\" \"}\r\n      |{\" \"}\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        onClick={() => {\r\n          deleteExercise(exercise._id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../App.css\";\r\n\r\nexport default function EditExercise(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [duration, setDuration] = useState(0);\r\n  const [date, setDate] = useState(new Date());\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const onChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const onChangedescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n  const onChangeduration = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n  const onChangedate = (date) => {\r\n    setDate(date);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: username,\r\n      description: description,\r\n      duration: duration,\r\n      date: date,\r\n    };\r\n    await axios.patch(`/exercises/${props.match.params.id}`, exercise);\r\n\r\n    window.location = \"/\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        let data = await axios.get(\"/exercises/\" + props.match.params.id);\r\n\r\n        setUsername(data.data.username);\r\n        setDescription(data.data.description);\r\n        setDuration(data.data.duration);\r\n        setDate(new Date(data.data.date));\r\n        console.log(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      let data = await axios.get(\"/users\");\r\n      console.log(data.data);\r\n      if (data.data.users.length > 0) {\r\n        setUsers(data.data.users.map((user) => user.username));\r\n        setUsername(data.data.users[0].username);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-5 border border-dark p-5\">\r\n        <h1 className=\"text-center mb-5\">Edit a Exercise Log</h1>\r\n        <form className=\"form-ex\" onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              required\r\n            >\r\n              {users.map((user) => (\r\n                <option key={user} value={user}>\r\n                  {user}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              value={description}\r\n              onChange={onChangedescription}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Duration (Min)</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Duration\"\r\n              value={duration}\r\n              onChange={onChangeduration}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date</label>\r\n            <DatePicker selected={date} onChange={onChangedate} />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../App.css\";\r\n\r\nexport default function CreateExercise() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [duration, setDuration] = useState(0);\r\n  const [date, setDate] = useState(new Date());\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await axios.get(\"/users\");\r\n      console.log(data.data);\r\n      if (data.data.users.length > 0) {\r\n        setUsers(data.data.users.map((user) => user.username));\r\n        setUsername(data.data.users[0].username);\r\n      }\r\n    }\r\n    getData();\r\n  }, []); // [] is very important because this will make it run only once when the page is loaded\r\n\r\n  const onChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const onChangedescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n  const onChangeduration = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n  const onChangedate = (date) => {\r\n    setDate(date);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: username,\r\n      description: description,\r\n      duration: duration,\r\n      date: date,\r\n    };\r\n\r\n    let data = await axios.post(\"/exercises/add\", exercise);\r\n    console.log(data);\r\n    // console.log(exercise);\r\n    window.location = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-5 border border-dark p-5\">\r\n        <h1 className=\"text-center mb-5\">Create a Exercise Log</h1>\r\n        <form className=\"form-ex\" onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              required\r\n            >\r\n              {users.map((user) => (\r\n                <option key={user} value={user}>\r\n                  {user}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              value={description}\r\n              onChange={onChangedescription}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Duration (Min)</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Duration\"\r\n              value={duration}\r\n              onChange={onChangeduration}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date</label>\r\n            <DatePicker selected={date} onChange={onChangedate} />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CreateUser() {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = { username: username };\r\n\r\n    let data = await axios.post(\"/users/add\", user);\r\n    setUsername(\"\");\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-5 border border-dark p-5\">\r\n        <h1 className=\"text-center mb-5\">Create a User</h1>\r\n        <form className=\"form-ex\" onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default function ButtonAppBar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Exercise Tracker\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <Link to=\"/\" className=\"nav-item active\">\r\n              <li className=\"nav-link\">Exercises</li>\r\n            </Link>\r\n            <Link to=\"/create\" className=\"nav-item active\">\r\n              <li className=\"nav-link\">Create Exercise Log</li>\r\n            </Link>\r\n            <Link to=\"/user\" className=\"nav-item active\">\r\n              <li className=\"nav-link\">Create User</li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport ExercisesList from \"./components/ExercisesList\";\nimport EditExercise from \"./components/EditExercise\";\nimport CreateExercise from \"./components/CreateExercise\";\nimport CreateUser from \"./components/CreateUser\";\nimport ButtonAppBar from \"./Navbar\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <ButtonAppBar />\n        <Switch>\n          <Route path=\"/\" exact component={ExercisesList} />\n          <Route path=\"/edit/:id\" component={EditExercise} />\n          <Route path=\"/create\" component={CreateExercise} />\n          <Route path=\"/user\" component={CreateUser} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}